-- VHDL data flow description generated from `sdetr_b`
--		date : Mon Apr 22 09:55:23 2019


-- Entity Declaration

ENTITY sdetr_b IS
  PORT (
  reset : in BIT;	-- reset
  day_time : in BIT;	-- day_time
  code : in bit_vector(3 DOWNTO 0) ;	-- code
  door : out BIT;	-- door
  alarm : out BIT;	-- alarm
  clk : in BIT;	-- clk
  vdd : in BIT;	-- vdd
  vss : in BIT	-- vss
  );
END sdetr_b;


-- Architecture Declaration

ARCHITECTURE behaviour_data_flow OF sdetr_b IS
  SIGNAL dac_current_state : REG_VECTOR(2 DOWNTO 0) REGISTER;	-- dac_current_state
  SIGNAL aux0 : BIT;		-- aux0
  SIGNAL aux2 : BIT;		-- aux2
  SIGNAL aux3 : BIT;		-- aux3
  SIGNAL aux4 : BIT;		-- aux4
  SIGNAL aux5 : BIT;		-- aux5
  SIGNAL aux6 : BIT;		-- aux6
  SIGNAL aux8 : BIT;		-- aux8
  SIGNAL aux12 : BIT;		-- aux12
  SIGNAL aux14 : BIT;		-- aux14
  SIGNAL aux16 : BIT;		-- aux16
  SIGNAL aux17 : BIT;		-- aux17
  SIGNAL aux18 : BIT;		-- aux18
  SIGNAL aux19 : BIT;		-- aux19
  SIGNAL aux21 : BIT;		-- aux21
  SIGNAL aux22 : BIT;		-- aux22

BEGIN
  aux22 <= (NOT(code(2)) AND NOT(dac_current_state(0)));
  aux21 <= (NOT(code(3)) AND (code(2) AND 
dac_current_state(0)));
  aux19 <= ((aux0 AND NOT(reset)) AND NOT(
dac_current_state(0)));
  aux18 <= (NOT(reset) AND dac_current_state(0));
  aux17 <= (code(3) OR NOT(code(2)));
  aux16 <= NOT(NOT(code(3)) OR (NOT(code(2)) OR NOT(day_time
)));
  aux14 <= ((aux3 AND NOT(dac_current_state(2))) AND NOT(
reset));
  aux12 <= ((((aux8 AND NOT(reset)) AND dac_current_state(1)
) AND NOT(code(3))) AND NOT(code(2)));
  aux8 <= ((NOT(code(0)) AND NOT(code(1))) AND 
dac_current_state(2));
  aux6 <= (aux5 AND NOT(reset));
  aux5 <= NOT(NOT(code(0)) OR code(1));
  aux4 <= (NOT(aux3) AND NOT(dac_current_state(1)));
  aux3 <= NOT(code(0) OR NOT(code(1)));
  aux2 <= NOT(code(1) AND dac_current_state(1));
  aux0 <= (NOT(dac_current_state(2)) OR 
dac_current_state(1));
  label0 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    dac_current_state (0) <= GUARDED ((aux14 AND NOT(dac_current_state(1)) AND NOT(
code(3)) AND aux22) OR aux12);
  END BLOCK label0;
  label1 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    dac_current_state (1) <= GUARDED (aux12 OR (aux3 AND NOT(reset) AND NOT(
dac_current_state(1)) AND aux21) OR (aux14 AND dac_current_state(1) 
AND code(3) AND aux22));
  END BLOCK label1;
  label2 : BLOCK ((NOT((clk'STABLE)) AND clk) = '1')
  BEGIN
    dac_current_state (2) <= GUARDED (((NOT(aux3) OR dac_current_state(1) OR aux17) 
AND aux18) OR (((NOT(aux8) AND dac_current_state(1))
 OR aux4 OR code(3) OR code(2)) AND aux19));
  END BLOCK label2;

alarm <= ((NOT(aux5) OR NOT(aux16)) AND (((((NOT(aux5) OR 
dac_current_state(2)) AND dac_current_state(1)) OR aux4 OR aux17) AND
 aux18) OR ((code(0) OR NOT(code(1) XOR (
dac_current_state(2) AND dac_current_state(1))) OR (aux2 AND code(3))
 OR (NOT(aux2) AND NOT(code(3))) OR code(2)) AND 
aux19)));

door <= (((aux0 OR dac_current_state(0)) AND aux6 AND 
aux16) OR (aux6 AND dac_current_state(1) AND aux21));
END;
